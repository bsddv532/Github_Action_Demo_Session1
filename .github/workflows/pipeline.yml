# This is a basic workflow to help you get started with Actions

name: CI_workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  var1: "It is a variable"
  GITHUB_USERNAME: bsddv532
  GITHUB_EMAIL: deepakpradhan9962@gmail.com
  GITHUB_REPO_NAME: Github_Action_Demo_Session1

jobs:
  # This workflow contains a single job called "build"
  job1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        id: step1
        run: echo "::set-output name=op1::Hello, New Relic"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        id: step2
        run: echo "::set-output name=op2::$var1"

    outputs:
      data1: ${{ steps.step1.outputs.op1 }}
      data2: ${{ steps.step2.outputs.op2 }}


  job2:
    needs: job1

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run output from job1
        run: |
          echo ${{ needs.job1.outputs.data1 }}
          echo ${{ needs.job1.outputs.data2 }}

  
  pushing_to_another_branch:
    runs-on: ubuntu-latest
    # needs: ['Docker_build_and_push']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          repository: ${{ env.GITHUB_USERNAME }}/${{ env.GITHUB_REPO_NAME }}
          ref: 'master'
          token: ${{ secrets.K8S_GITHUB_TOKEN }}
      - name: setup git config
        run: |
          git config --global user.name "${{ env.GITHUB_USERNAME }}"
          git config --global user.email "${{ env.GITHUB_EMAIL }}"
          git add -A
          git commit -m "Updated code"
          git push origin testing



  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #     # with:
  #     #   token: ${{secrets.ACCESS_TOKEN}}
  #   # - run: |
  #   #     git push -u origin testing

  #   - name: Push
  #     uses: s0/git-publish-subdir-action@develop
  #     env:
  #       REPO: self
  #       BRANCH: testing # The branch name where you want to push the assets
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
  #       MESSAGE: "Commit to another branch" # The commit message


  
  # report:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: Commit report
  #       run: |
  #         git config --global user.name 'bsddv532'
  #         git config --global user.email 'deepakpradhan9962@gmail.com'
  #         git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
  #         git checkout "${GITHUB_REF:11}"
  #         git commit -am "commiting code to testing"
  #         git push -u origin testing


# for committing the existing files to another branch
  # job3: 
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v3
  #       with:
  #         ref: master
  #         token: ${{secrets.ACCESS_TOKEN}}

  #     # - name: Create new branch
  #     #   run: |
  #     #     git checkout -b demobranch
  #     #     git push -u origin demobranch

  #     - name: Make changes and commit
  #       run: |
  #         git add .
  #         git commit -m "Made some changes"
  #         git push -u origin testing


  # push-to-testing:
  #   name: Push to testing
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - run: |
  #       git remote set-url origin https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
  #       git push -f origin develop:testing


  # job4:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v3
  #       with:
  #         ref: master

  #     - name: Checkout target branch
  #       run: git checkout testing

  #     - name: Make changes and commit
  #       run: |
  #         git add .
  #         git commit -m "Made some changes"
  #         git push origin testing

